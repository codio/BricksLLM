# name: goreleaser

# on:
#   push:
#     tags:
#       - "v*"

# jobs:
#   goreleaser:
#     runs-on: macos-latest
#     steps:
#       - name: Install Go
#         uses: actions/setup-go@v4
#         with:
#           go-version: 1.22.x
#           check-latest: true

#       - name: Check Out Repo
#         uses: actions/checkout@v3

#       - name: Install the Apple certificate and provisioning profile
#         env:
#           BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
#           P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
#           KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
#         run: |
#           # create variables
#           CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
#           KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

#           # import certificate and provisioning profile from secrets
#           echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH

#           # create temporary keychain
#           security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
#           security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
#           security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

#           # import certificate to keychain
#           security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
#           security list-keychain -d user -s $KEYCHAIN_PATH

#       - name: Release Notes
#         run: ./scripts/release_notes.sh > ./release_notes.md

#       - name: GoReleaser
#         uses: goreleaser/goreleaser-action@v4
#         with:
#           version: latest
#           args: release --release-notes=./release_notes.md --timeout 60m
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           APPLE_DEVELOPER_PASSWORD: ${{ secrets.APPLE_DEVELOPER_PASSWORD }}
#           APPLE_DEVELOPER_USERNAME: ${{ secrets.APPLE_DEVELOPER_USERNAME }}
#           APPLE_DEVELOPER_TEAM_ID: ${{ secrets.APPLE_DEVELOPER_TEAM_ID }}

#   docker:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Install Go
#         uses: actions/setup-go@v3
#         with:
#           go-version: 1.22.x
#           check-latest: true

#       - name: Check Out Repo
#         uses: actions/checkout@v3

#       - name: Login to Docker Hub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKER_HUB_USERNAME }}
#           password: ${{ secrets.DOCKER_HUB_PASSWORD }}

#       - name: Install Buildx
#         id: buildx
#         uses: docker/setup-buildx-action@v1

#       - name: Docker meta
#         id: meta
#         uses: docker/metadata-action@v4
#         with:
#           images: luyuanxin1995/bricksllm
#           tags: |
#             type=semver,pattern={{version}}
#             type=semver,pattern={{major}}.{{minor}}
#             type=semver,pattern={{major}}

#       - name: Docker meta
#         id: meta-datadog
#         uses: docker/metadata-action@v4
#         with:
#           images: luyuanxin1995/bricksllm-datadog
#           tags: |
#             type=semver,pattern={{version}}
#             type=semver,pattern={{major}}.{{minor}}
#             type=semver,pattern={{major}}

#       - name: Build and push
#         uses: docker/build-push-action@v2
#         with:
#           context: ./
#           file: ./Dockerfile.prod
#           builder: ${{ steps.buildx.outputs.name }}
#           platforms: linux/amd64,linux/arm64
#           push: true
#           tags: ${{ steps.meta.outputs.tags }}

#       - name: Build and push
#         uses: docker/build-push-action@v2
#         with:
#           context: ./
#           file: ./Dockerfile.datadog
#           builder: ${{ steps.buildx.outputs.name }}
#           platforms: linux/amd64,linux/arm64
#           push: true
#           tags: ${{ steps.meta-datadog.outputs.tags }}
